# Copyright 2008, 2009 Ingmar Vanhassel <ingmar@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'ca-certificates-20070303-r1.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation.

SUMMARY="Common CA Certificates PEM files"
HOMEPAGE="https://www.cacert.org"
DOWNLOADS="mirror://debian/pool/main/c/${PN}/${PN}_${PV}_all.deb"

LICENCES="GPL-2 MPL-2.0"
SLOT="0"
PLATFORMS="~amd64 ~arm ~armv7 ~armv8 ~x86"
MYOPTIONS="
    ca-trust [[ description = [ Generate and install the Java KeyStore and PEM bundle files ] ]]
    ( providers: libressl openssl ) [[ number-selected = exactly-one ]]
"

DEPENDENCIES="
    run:
        ca-trust? ( dev-libs/p11-kit:1 )
        providers:libressl? ( dev-libs/libressl:= )
        providers:openssl? ( dev-libs/openssl )
    install+run:
        sys-apps/debianutils [[ note = [ update-ca-certificates needs run-parts from debianutils ] ]]
"

WORK=${WORKBASE}

src_unpack() {
    default

    unpack ./data.tar.xz
    edo rm -f control.tar.xz data.tar.xz debian-binary
}

src_prepare() {
    # requires an openssl version >= 1.1.0
    edo sed \
        -e 's:openssl rehash:c_rehash:g' \
        -i usr/sbin/update-ca-certificates

    default
}

src_install() {
    # Handle documentation & manuals Exherbo-style and remove the Debian specific examples
    edo find ./usr/share -type f -name '*.gz' | xargs gunzip || die 'Failed to unzip docs/man-pages.'
    edo rm -r ./usr/share/doc/ca-certificates/examples
    dodoc ./usr/share/doc/ca-certificates/*
    edo rm -r ./usr/share/doc/ca-certificates

    # Install CAcert certificate; used to be an option but now is required by many system packages
    dodir /usr/share/ca-certificates/cacert.org
    edo cp -r "${FILES}"/extra-ca-certs/cacert.org "${IMAGE}"/usr/share/ca-certificates

    edo cp -pPR * "${IMAGE}"/

    {
    echo "# Automatically generated by =${CATEGORY}/${PNVR}."
    echo "# Do NOT edit."
    edo cd "${IMAGE}"/usr/share/ca-certificates
    edo find . -name '*.crt' | edo sort | edo cut -b3-
    } >> "${IMAGE}"/etc/ca-certificates.conf

    hereenvd 98ca-certificates <<EOF
CONFIG_PROTECT_MASK="/etc/ca-certificates.conf"
EOF

    # Local certificates & hooks for update-ca-certificates, respectively
    keepdir /etc/ssl/certs/ /etc/ca-certificates/update.d/

    edo mkdir -p "${IMAGE}"/usr/$(exhost --target)
    edo mv "${IMAGE}"/usr/{sbin,$(exhost --target)/bin}

    # Install Fedora/Redhat script to generate the Java KeyStore and PEM bundle files
    # Source: http://pkgs.fedoraproject.org/cgit/rpms/ca-certificates.git/plain/update-ca-trust
    if option ca-trust ; then
        dobin "${FILES}"/update-ca-trust
        keepdir /etc/pki/ca-trust/extracted/{edk2,openssl,pem,java}
    fi
}

pkg_postinst() {
    echo "Removing broken symlinks in ${ROOT}/etc/ssl/certs."
    find -L "${ROOT}"/etc/ssl/certs -type l -print0 | xargs -0 --no-run-if-empty rm \
        || ewarn "Some broken symlinks couldn't be removed. You must fix this manually."

    if [[ ${ROOT} == "/" ]]; then
        update-ca-certificates || ewarn "update-ca-certificates failed."
    else
        ewarn "Cannot run 'update-ca-certificates' or 'openssl certhash' because ROOT == ${ROOT} != /, you need to run it manually."
    fi

    if option ca-trust ; then
        if [[ ${ROOT} == "/" ]]; then
            update-ca-trust || ewarn "update-ca-trust failed."
        else
            ewarn "Cannot run 'update-ca-trust' because ROOT == ${ROOT} != /, you need to run it manually."
        fi
    fi
}

