# Copyright 2009-2015 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

export_exlib_phases pkg_pretend src_prepare src_configure src_test_expensive src_install

require systemd-service alternatives openrc-service
require flag-o-matic

SUMMARY="PHP is a general-purpose scripting language especially suited for web development"
DESCRIPTION="
PHP is a widely-used Open Source general-purpose scripting language that is especially
suited for Web development and can be embedded into HTML. Its syntax draws upon
C, Java, and Perl, and is easy to learn. PHP runs on many different platforms and
can be used as a standalone executable or as a module under a variety of Web servers.
It has excellent support for databases, XML, LDAP, IMAP, Java, various Internet
protocols, and general data manipulation, and is extensible via its powerful API.
"
HOMEPAGE="https://secure.${PN}.net"
DOWNLOADS="${HOMEPAGE}/distributions/${PNV}.tar.bz2"

LICENCES="PHP-3"
SLOT="$(ever range 1-2)"
# TODO(Cogitri): valgrind for PHP 7.2.x
MYOPTIONS="
    debug
    apache [[ description = [ Build PHP for the Apache webserver. ] ]]
    pear [[ description = [ Support for using the PHP Extension and Application Repository (PEAR). ] requires = [ php_extensions: pcre xml ] ]]
    fpm [[ description = [ Build alternative FastCGI implementation (FastCGI Process Manager) for heavy-loaded sites. ] ]]
    systemd
    ( apache fpm ) [[ number-selected = at-most-one ]]

    (
        php_extensions:
            curl          [[ description = [ Build the cURL extension. ] ]]
            berkdb        [[ description = [ Build the Berkeley DB extension. ] ]]
            exif          [[ description = [ Support acquiring metadata from images using exif. ] ]]
            fileinfo      [[ description = [ Build fileinfo support. ] ]]
            filter        [[ description = [ Build the input filter extension. ] ]]
            ftp           [[ description = [ Enable FTP support. ] requires = [ php_extensions: ssl ] ]]
            gd            [[ description = [ Support dynamic image manipulation via the bundled GD graphics library (activates all supported formats) ] ]]
            gdbm          [[ description = [ Build the GNU DBM extension. ] ]]
            imap          [[ description = [ Support for the IMAP4 protocol. ] ]]
            kerberos      [[ description = [ Support for Kerberos authentication. ] ]]
            ldap          [[ description = [ Support for LDAP authentication (activates SASL, too). ] ]]
            libedit       [[ description = [ Use libedit, the readline replacement. ] requires = [ php_extensions: -readline ] ]]
            mysqli        [[ description = [ Support for the popular MySQL database, improved driver. ] ]]
            pcre          [[ description = [ Include support for Perl Compatible Regular Expressions. ] ]]
            pdo-dblib     [[ description = [ PDO: Support for MS SQL-Server. ] ]]
            pdo-mysql     [[ description = [ PDO: Support for the popular MySQL database. ] ]]
            pdo-odbc      [[ description = [ PDO: Support for ODBC. ] ]]
            pdo-pgsql     [[ description = [ PDO: Support for PostgreSQL. ] ]]
            pdo-sqlite    [[ description = [ PDO: Support for sqlite3. ] ]]
            pgsql         [[ description = [ Support for the PostgreSQL database. ] ]]
            pspell        [[ description = [ Support for spell checking via aspell. ] ]]
            readline      [[ description = [ Include readline support (CLI/CGI only) ] requires = [ php_extensions: -libedit ] ]]
            ssl           [[ description = [ Include OpenSSL support (can be used for FTP, IMAP, SNMP). ] ]]
            tidy          [[ description = [ Include TIDY support. ] ]]
            unixodbc      [[ description = [ Support for using ODBC database connections using unixODBC. ] ]]
            xml           [[ description = [ Support for XML parsing/reading/writing. ] ]]
            xmlrpc        [[ description = [ Support for writing XML-RPC servers and clients. ] requires = [ php_extensions: xml ] ]]
            xsl           [[ description = [ Include XSL support. ] ]]
    )

    php_extensions:ftp? ( ( providers: libressl openssl ) [[ number-selected = exactly-one ]] )
    php_extensions:gd?  ( ( providers: ijg-jpeg jpeg-turbo ) [[ number-selected = exactly-one ]] )
    php_extensions:ssl? ( ( providers: libressl openssl ) [[ number-selected = exactly-one ]] )
"

if ! ever at_least 5.5.9; then
    MYOPTIONS+="
        (
            php_extensions:
                curlwrappers  [[ description = [ Configure PHP to use cURL for URL streams. ] ]]
                curlwrappers  [[ requires = [ php_extensions: curl ] ]]
        )
    "
fi

if ever at_least 7.0.0; then
    MYOPTIONS+="
        (
            php_extensions:
                recode        [[ description = [ Include support for the recode extension. ] ]]
        )
    "
else
    MYOPTIONS+="
        (
            php_extensions:
                mssql         [[ description = [ Support for MS SQL-Server. ] ]]
                mysql         [[ description = [ Support for the popular MySQL database. ] requires = [ php_extensions: -recode ] ]]
                recode        [[ description = [ Include support for the recode extension. ] requires = [ php_extensions: -mysql ] ]]
        )
    "
fi

if ever at_least 7.2.0; then
    MYOPTIONS+="
        (
            php_extensions:
                sodium        [[ description = [ Support libsodium (modern, secure and fast cryptography) ] ]]
        )
    "
else
    MYOPTIONS+="
        (
            php_extensions:
                mcrypt        [[ description = [ Support modern encryption algorithms, e. g. AES. ] ]]
        )
    "
fi

DEPENDENCIES="
    build:
        sys-devel/gettext
    build+run:
        dev-libs/gmp:=[>=4.3.0]
        dev-libs/icu:=[>=4.2.1]
        apache? ( www-servers/apache[>=2.2.11] )
        php_extensions:curl? ( net-misc/curl[>=7.19.4] )
        php_extensions:berkdb? ( sys-libs/db:=[>=4.6.21] )
        php_extensions:ftp? (
            providers:libressl? ( dev-libs/libressl:= )
            providers:openssl? ( dev-libs/openssl )
        )
        php_extensions:gd? (
            media-libs/freetype:2
            media-libs/libpng:=[>=1.2.35]
            media-libs/libvpx:=
            x11-libs/libXpm[>=3.5.7]
            providers:ijg-jpeg? ( media-libs/jpeg:=[>=6b] )
            providers:jpeg-turbo? ( media-libs/libjpeg-turbo )
        )
        php_extensions:gdbm? ( sys-libs/gdbm[>=1.8.3] )
        php_extensions:imap? (
            php_extensions:ssl? (
                dev-libs/c-client[>=2007e][ssl(+)]
            )
            !php_extensions:ssl? (
                dev-libs/c-client[>=2007e]
            )
        )
        php_extensions:kerberos? ( app-crypt/heimdal[>=1.2.1] )
        php_extensions:ldap? (
            net-directory/openldap[>=2.4.15]
            net-libs/cyrus-sasl[>=2.1.22]
        )
        php_extensions:libedit? ( dev-libs/libedit[>=2.11_p20080712] )
        php_extensions:pcre? ( dev-libs/pcre[>=7.9] )
        php_extensions:pdo-dblib? ( dev-db/freetds[>=0.82] )
        php_extensions:pdo-odbc? ( dev-db/unixODBC[>=2.2.14] )
        php_extensions:pdo-pgsql? ( dev-db/postgresql-client[>=8.3.7] )
        php_extensions:pdo-sqlite? ( dev-db/sqlite:3[>=3.5.9] )
        php_extensions:pgsql? ( dev-db/postgresql-client[>=8.3.7] )
        php_extensions:pspell? ( app-spell/aspell[>=0.50.0] )
        php_extensions:readline? ( sys-libs/readline:=[>=5.2_p12] )
        php_extensions:recode? ( app-text/recode[>=3.6] )
        php_extensions:ssl? (
            php_extensions:imap? (
                dev-libs/c-client[>=2007e][ssl(+)]
            )
            providers:libressl? ( dev-libs/libressl:= )
            providers:openssl? ( dev-libs/openssl )
        )
        php_extensions:tidy? ( app-text/tidy[>=5.1.47] )
        php_extensions:unixodbc? ( dev-db/unixODBC[>=2.2.14] )
        php_extensions:xml? ( dev-libs/libxml2:2.0[>=2.7.2_p20081127] )
        php_extensions:xsl? ( dev-libs/libxslt[>=1.1.0] )
        !dev-lang/php:0 [[
            description = [ php is now slotted ]
            resolution = uninstall-blocked-before
        ]]
"

if ever at_least 5.6.4; then
    DEPENDENCIES+="
        app-arch/libzip[>=0.11]
    "
fi

if ! ever at_least 7.0.0; then
    DEPENDENCIES+="
        php_extensions:gd? (
            media-libs/t1lib[>=5.1.2]
        )
        php_extensions:mssql? ( dev-db/freetds[>=0.82] )
    "
fi

if ever at_least 7.2.0; then
    DEPENDENCIES+="
        php_extensions:sodium? ( dev-libs/libsodium[>=1.0.8] )
    "
else
    DEPENDENCIES+="
        php_extensions:mcrypt? ( dev-libs/libmcrypt[>=2.5.8] )
    "
fi

BUGS_TO="philantrop@exherbo.org"
REMOTE_IDS="freecode:${PN}"

UPSTREAM_CHANGELOG="${HOMEPAGE}/ChangeLog-$(ever major).php#${PV}"
UPSTREAM_DOCUMENTATION="${HOMEPAGE}/docs.php"
UPSTREAM_RELEASE_NOTES="${HOMEPAGE}/releases/$(ever replace_all _).php"

# Most of the gazillions of tests pass but a few fail. Most of those fail because
# things like ODBC are not configured and/or running. If someone really wants to
# look into that, be my guest. I won't but I reported the test failures upstream.
RESTRICT="test"

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --hates=docdir
    --libdir=/usr/share/${PN}-${SLOT}
    --localstatedir=/var
    --program-suffix=-${SLOT}
    --enable-bcmath
    --enable-calendar
    --enable-cli
    --enable-ctype
    --enable-dba
    --enable-flatfile
    --enable-hash
    --enable-inifile
    --enable-intl
    --enable-ipv6
    --enable-json
    --enable-mbstring
    --enable-mbregex
    --enable-mbregex-backtrack
    --enable-pcntl
    --enable-phar
    --enable-posix
    --enable-session
    --enable-shmop
    --enable-sockets
    --enable-sysvmsg
    --enable-sysvsem
    --enable-sysvshm
    --enable-tokenizer
    --enable-zip
    --disable-embed
    --disable-embedded-mysqli
    --with-bz2
    --with-config-file-path=/etc/${PN}-${SLOT}
    --with-config-file-scan-dir=/etc/${PN}-${SLOT}
    --with-gettext
    --with-gmp
    --with-iconv
    --with-icu-dir=/usr
    --with-layout=GNU
    --with-zlib
    --with-zlib-dir=/usr
    --without-adabas
    --without-birdstep
    --without-cdb
    --without-custom-odbc
    --without-dbmaker
    --without-empress
    --without-empress-bcs
    --without-enchant
    --without-esoob
    --without-mhash
    --without-ibm-db2
    --without-interbase
    --without-iodbc
    --without-litespeed
    --without-mm
    --without-ndbm
    --without-ODBCRouter
    --without-oci8
    --without-pdo-firebird
    --without-pdo-oci
    --without-qdbm
    --without-sapdb
    --without-snmp
    --without-solid
    # TODO(sardemff7): Remove once fixed upstream
    # https://github.com/php/php-src/pull/1885
    PKG_CONFIG="$(which ${PKG_CONFIG})"
)

if ever at_least 5.5.9; then
    DEFAULT_SRC_CONFIGURE_PARAMS+=(
        --enable-opcache
    )
fi

if ever at_least 5.6.4; then
    DEFAULT_SRC_CONFIGURE_PARAMS+=(
        --with-libzip
    )
fi

if ! ever at_least 7.0.0; then
    DEFAULT_SRC_CONFIGURE_PARAMS+=(
        --without-aolserver
        --without-apache-hooks
        --without-apache-hooks-static
        --without-apxs
        --without-caudium
        --without-continuity
        --without-isapi
        --without-milter
        --without-nsapi
        --without-phttpd
        --without-pi3web
        --without-roxen
        --without-sybase-ct
        --without-thttpd
        --without-tux
        --without-webjames
    )
fi

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
    debug
    fpm
    "php_extensions:exif exif"
    "php_extensions:fileinfo fileinfo"
    "php_extensions:filter filter"
    "php_extensions:ftp ftp"
    "php_extensions:gd gd-native-ttf"
    "php_extensions:xml dom"
    "php_extensions:xml libxml"
    "php_extensions:xml simplexml"
    "php_extensions:xml soap"
    "php_extensions:xml wddx"
    "php_extensions:xml xml"
    "php_extensions:xml xmlreader"
    "php_extensions:xml xmlwriter"
)

DEFAULT_SRC_CONFIGURE_OPTION_WITHS=(
    "apache apxs2"
    "pear pear /usr/share/pear-${SLOT}"
    "php_extensions:curl curl"
    "php_extensions:berkdb db4"
    "php_extensions:gd gd"
    "php_extensions:gd jpeg-dir /usr"
    "php_extensions:gd freetype-dir /usr"
    "php_extensions:gd png-dir /usr"
    "php_extensions:gd xpm-dir /usr"
    "php_extensions:imap imap"
    "php_extensions:gdbm gdbm"
    "php_extensions:kerberos kerberos"
    "php_extensions:ldap ldap"
    "php_extensions:ldap ldap-sasl"
    "php_extensions:libedit libedit"
    "php_extensions:mysqli mysqli mysqlnd"
    "php_extensions:mysqli mysql-sock /run/mysqld/mysqld.sock"
    "php_extensions:pcre pcre-dir /usr"
    "php_extensions:pcre pcre-regex /usr"
    "php_extensions:pdo-mysql pdo-mysql mysqlnd"
    "php_extensions:pdo-mysql mysql-sock /run/mysqld/mysqld.sock"
    "php_extensions:pdo-dblib pdo-dblib /usr"
    "php_extensions:pdo-odbc pdo-odbc unixODBC,/usr"
    "php_extensions:pdo-pgsql pdo-pgsql /usr"
    "php_extensions:pdo-sqlite pdo-sqlite /usr"
    "php_extensions:pdo-sqlite sqlite3 /usr"
    "php_extensions:pgsql pgsql /usr"
    "php_extensions:pspell pspell"
    "php_extensions:readline readline"
    "php_extensions:recode recode"
    "php_extensions:ssl imap-ssl"
    "php_extensions:ssl openssl"
    "php_extensions:tidy tidy"
    "php_extensions:unixodbc unixODBC /usr"
    "php_extensions:xmlrpc xmlrpc"
    "php_extensions:xsl xsl"
)

if ever at_least 5.5.9; then
    DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
        "systemd fpm-systemd"
    )
else
    DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
        "php_extensions:curlwrappers curlwrappers"
    )
fi

if ! ever at_least 7.0.0; then
    DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
        "php_extensions:gd t1lib /usr"
        "php_extensions:mssql mssql"
        "php_extensions:mysql mysql mysqlnd"
        "php_extensions:mysql mysql-sock /run/mysqld/mysqld.sock"
    )
fi

if ever at_least 7.2.0; then
    DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
        "php_extensions:sodium sodium"
    )
else
    DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
        "php_extensions:mcrypt mcrypt"
    )
fi

DEFAULT_SRC_INSTALL_PARAMS=( INSTALL_ROOT="${IMAGE}" )

DEFAULT_SRC_INSTALL_EXTRA_DOCS=(
    CODING_STANDARDS
    EXTENSIONS
    UPGRADING
)

DEFAULT_SRC_INSTALL_EXCLUDE=(
    README.QNX
    README.WIN32-BUILD-SYSTEM
    README.Zeus
)

check_legacy_conf_dir() {
    [[ -d "${1}" && ! -L "${1}" ]] && elog "${1} is not a symlink, please rename it to ${1}-${SLOT}"
}

check_legacy_conf_file() {
    [[ -f "${1}" && ! -L "${1}" ]] && elog "${1} is not a symlink, please rename it to ${1/.conf}-${SLOT}.conf"
}

check_legacy_config() {
    local ret=0
    check_legacy_conf_dir "/etc/php"                   && ret=1
    check_legacy_conf_dir "/usr/share/php"             && ret=1
    check_legacy_conf_dir "/usr/share/pear"            && ret=1
    check_legacy_conf_file "/etc/pear.conf"            && ret=1
    check_legacy_conf_file "/etc/php-fpm.conf"         && ret=1
    check_legacy_conf_file "/etc/php-fpm.conf.default" && ret=1
    return ${ret}
}

php_pkg_pretend() {
    check_legacy_config || die "User interaction required"
}

php_src_prepare() {
    default
    if ! ever at_least 7 && has_version "dev-libs/openssl[>=1.1.0]"; then
        if ever at_least 5.6; then
            expatch "${FILES}"/5.6-openssl1.1.patch
        fi
    fi
    edo sed -e "/include_dir=/s/php/&-${SLOT}/" -i scripts/php-config.in
    edo sed -e "/includedir=/s/php/&-${SLOT}/" -i scripts/phpize.in
    edo sed -e "s/ php-config,/ php-config-${SLOT},/" -i scripts/phpize.m4
}

php_src_configure() {
    if ! ever at_least 7.1.21 ; then
        # Compatibility flag to build against icu[>=61]
        # http://site.icu-project.org/download/61#TOC-Migration-Issues
        append-flags -DU_USING_ICU_NAMESPACE=1
    fi

    default
}

php_src_test_expensive() {
    return

    # Make sure the standard php.ini-dist gets used here.
    edo cp php.ini-development tmp-php.ini
    edo sed -i -e 's:\(echo >\) \($(top_builddir)/tmp-php.ini;\):\1> \2 :' Makefile

    emake -j1 test
}

php_src_install() {
    export PHP_PEAR_TEMP_DIR="/tmp"
    export PHP_PEAR_CACHE_DIR="/var/cache/pear-${SLOT}"
    export PHP_PEAR_DOWNLOAD_DIR="/tmp"

    local alternatives=()

    # Needed but useless because we'll remove it later.
    if option apache; then
        edo mkdir -p "${IMAGE}"/etc/apache2
        edo cp /etc/apache2/httpd.conf "${IMAGE}"/etc/apache2
    fi

    # Allow installation of various PEAR extensions if PEAR is enabled.
    if option pear; then
        esandbox allow /usr/share/pear-${SLOT}/.lock
    fi

    default

    # Cleaning up.
    if option pear; then
        edo rm -rf "${IMAGE}"/.{channels,registry}
        edo rm "${IMAGE}"/.{depdb,depdblock,filemap,lock}
    fi
    edo rmdir "${IMAGE}"/usr/$(exhost --target)/include/php/include

    if option apache; then
        edo rm "${IMAGE}"/etc/apache2/*
    fi

    if option pear; then
        keepdir /usr/share/pear-${SLOT}/.registry/.channel.__uri
        keepdir /usr/share/pear-${SLOT}/.registry/.channel.{doc,pecl}.php.net
    fi

    alternatives+=(
        /usr/$(exhost --target)/include/php php-${SLOT}
        /usr/share/php                      php-${SLOT}
    )

    for bin in phar.phar phar php php-cgi php-config phpize; do
        alternatives+=(
            /usr/$(exhost --target)/bin/${bin} ${bin}-${SLOT}
            /usr/share/man/man1/${bin}.1       ${bin}-${SLOT}.1
        )
    done

    dodir /etc/${PN}-${SLOT}
    insinto /etc/${PN}-${SLOT}
    newins php.ini-production php.ini

    if ever at_least 5.5.9; then
        # We already build opcache by default, this actually enables it on runtime
        edo echo "zend_extension = opcache.so" > "${IMAGE}"/etc/${PN}-${SLOT}/opcache.ini
    fi

    alternatives+=( /etc/php php-${SLOT} )

    if option pear; then
        edo sed -i -e 's|^;\(include_path =\).*|\1 ".:/usr/share/pear-'${SLOT}':/usr/share/php-'${SLOT}':"|' "${IMAGE}"/etc/php-${SLOT}/php.ini
        keepdir "${PHP_PEAR_CACHE_DIR}"
        alternatives+=(
            /etc/pear.conf  pear-${SLOT}.conf
            /var/cache/pear pear-${SLOT}
            /usr/share/pear pear-${SLOT}
        )
        for bin in pear peardev pecl; do
            alternatives+=( /usr/$(exhost --target)/bin/${bin} ${bin}-${SLOT} )
        done
    fi

    if ! ever at_least 7.0.0; then
        if option php_extensions:mysql ; then
            edo sed -i -e 's:.*\(mysql.default_socket =\).*:\1 "/run/mysqld/mysqld.sock":' "${IMAGE}"/etc/php-${SLOT}/php.ini
        fi
    fi

    if option apache; then
        dodir /etc/apache2/modules.d
        insinto /etc/apache2/modules.d
        doins "${FILES}"/70_mod_php.conf

        if ever at_least 7.0.0; then
            alternatives+=(
                /usr/$(exhost --target)/libexec/apache2/modules/libphp7.so libphp-${SLOT}
            )
        fi
    fi

    if option fpm || ever at_least 7.0.0; then
        edo rmdir "${IMAGE}"/var/{run,log}
        if ! option pear; then
            edo rmdir "${IMAGE}"/var
        fi
    fi

    if option fpm; then
        install_systemd_files
        install_openrc_files
        alternatives+=(
            /usr/$(exhost --target)/bin/php-fpm     php-fpm-${SLOT}
            /usr/share/man/man8/php-fpm.8           php-fpm-${SLOT}.8
            /usr/share/fpm                          php-fpm-${SLOT}
            /etc/php-fpm.conf                       php-fpm-${SLOT}.conf
            /etc/php-fpm.conf.default               php-fpm-${SLOT}.conf.default
            ${SYSTEMDSYSTEMUNITDIR}/php-fpm.service php-fpm-${SLOT}.service
        )
        if option parts:openrc; then
            alternatives+=(
                /etc/init.d/php-fpm                     php-fpm-${SLOT}
            )
        fi
    fi

    # Set extension_dir path. Only replace the first occurence.
    linenum=$(edo grep -n "extension_dir" "${IMAGE}"/etc/php-${SLOT}/php.ini | head -1 | awk -F: '{ print $1}')
    extension_dir=$(edo "${IMAGE}"/usr/$(exhost --target)/bin/php-config-${SLOT} --extension-dir | sed -e 's/\//\\\//g')
    edo sed -i -e "${linenum},${linenum} s/; extension_dir = \".\/\"/extension_dir = \"${extension_dir}\"/" "${IMAGE}"/etc/php-${SLOT}/php.ini

    alternatives_for ${PN} ${SLOT} ${SLOT} "${alternatives[@]}"
}

