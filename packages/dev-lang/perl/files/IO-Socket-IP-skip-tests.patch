Author: Thomas Witt
Upstream: no
Reason: These tests need network access


diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/01local-client-v4.t b/perl-5.20.0/cpan/IO-Socket-IP/t/01local-client-v4.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/01local-client-v4.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/01local-client-v4.t	2014-06-02 22:09:50.195462359 +0200
@@ -10,6 +10,8 @@
 use IO::Socket::INET;
 use Socket qw( inet_aton inet_ntoa pack_sockaddr_in unpack_sockaddr_in );
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 # Some odd locations like BSD jails might not like INADDR_LOOPBACK. We'll
 # establish a baseline first to test against
 my $INADDR_LOOPBACK = do {
diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/02local-server-v4.t b/perl-5.20.0/cpan/IO-Socket-IP/t/02local-server-v4.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/02local-server-v4.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/02local-server-v4.t	2014-06-02 22:10:23.775463878 +0200
@@ -10,6 +10,8 @@
 use IO::Socket::INET;
 use Socket qw( inet_aton inet_ntoa pack_sockaddr_in unpack_sockaddr_in );
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 # Some odd locations like BSD jails might not like INADDR_LOOPBACK. We'll
 # establish a baseline first to test against
 my $INADDR_LOOPBACK = do {
diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/03local-cross-v4.t b/perl-5.20.0/cpan/IO-Socket-IP/t/03local-cross-v4.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/03local-cross-v4.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/03local-cross-v4.t	2014-06-02 22:10:43.675872149 +0200
@@ -7,6 +7,8 @@
 
 use IO::Socket::IP;
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 foreach my $socktype (qw( SOCK_STREAM SOCK_DGRAM )) {
    my $testserver = IO::Socket::IP->new(
       ( $socktype eq "SOCK_STREAM" ? ( Listen => 1 ) : () ),
diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/04local-client-v6.t b/perl-5.20.0/cpan/IO-Socket-IP/t/04local-client-v6.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/04local-client-v6.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/04local-client-v6.t	2014-06-02 22:10:55.674515380 +0200
@@ -8,6 +8,8 @@
 use IO::Socket::IP;
 use Socket qw( inet_pton inet_ntop pack_sockaddr_in6 unpack_sockaddr_in6 IN6ADDR_LOOPBACK );
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 my $AF_INET6 = eval { Socket::AF_INET6() } or
    plan skip_all => "No AF_INET6";
 
diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/05local-server-v6.t b/perl-5.20.0/cpan/IO-Socket-IP/t/05local-server-v6.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/05local-server-v6.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/05local-server-v6.t	2014-06-02 22:11:11.703038776 +0200
@@ -8,6 +8,8 @@
 use IO::Socket::IP;
 use Socket qw( inet_pton inet_ntop pack_sockaddr_in6 unpack_sockaddr_in6 IN6ADDR_LOOPBACK );
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 my $AF_INET6 = eval { Socket::AF_INET6() } or
    plan skip_all => "No AF_INET6";
 
diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/06local-cross-v6.t b/perl-5.20.0/cpan/IO-Socket-IP/t/06local-cross-v6.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/06local-cross-v6.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/06local-cross-v6.t	2014-06-02 22:11:24.292664408 +0200
@@ -7,6 +7,8 @@
 
 use IO::Socket::IP;
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 eval { IO::Socket::IP->new( LocalHost => "::1" ) } or
    plan skip_all => "Unable to bind to ::1";
 
diff -ru a/perl-5.20.0/cpan/IO-Socket-IP/t/16v6only.t b/perl-5.20.0/cpan/IO-Socket-IP/t/16v6only.t
--- a/perl-5.20.0/cpan/IO-Socket-IP/t/16v6only.t	2014-05-26 15:34:19.000000000 +0200
+++ b/perl-5.20.0/cpan/IO-Socket-IP/t/16v6only.t	2014-06-02 22:11:41.986138403 +0200
@@ -8,6 +8,8 @@
 use Socket qw(PF_INET6 PF_INET IPPROTO_IPV6 IPV6_V6ONLY);
 use IO::Socket::IP;
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 eval { IO::Socket::IP->new( LocalHost => "::1" ) } or
    plan skip_all => "Unable to bind to ::1";
 
diff -ru a/perl-5.26.1/cpan/IO-Socket-IP/t/31nonblocking-connect-internet.t b/perl-5.26.1/cpan/IO-Socket-IP/t/31nonblocking-connect-internet.t
--- a/perl-5.26.1/cpan/IO-Socket-IP/t/31nonblocking-connect-internet.t	2017-07-19 00:49:33.000000000 +0200
+++ b/perl-5.26.1/cpan/IO-Socket-IP/t/31nonblocking-connect-internet.t	2018-03-26 14:28:41.997210530 +0200
@@ -10,6 +10,8 @@
 use IO::Socket::INET;
 use Errno qw( EINPROGRESS EWOULDBLOCK ECONNREFUSED );
 
+plan skip_all => "[Exherbo] This test collides with network sandboxing";
+
 # Chris Williams (BINGOS) has offered cpanidx.org as a TCP testing server here
 my $test_host = "cpanidx.org";
 my $test_good_port = 80;
