Upstream: submitted
Source: https://github.com/libffi/libffi/pull/242
Reason: libffi compiles just fine on musl, but fails tests and doesn't
        work at all, causing segfaults with any python program using C
        extensions.

From 564fca60d77e769036dc033d0db0486923d5f5f2 Mon Sep 17 00:00:00 2001
From: Kylie McClain <somasis@exherbo.org>
Date: Fri, 29 Apr 2016 21:04:07 -0400
Subject: [PATCH] Fix usage on musl libc

musl libc does not define __gnu_linux__, it defines __linux__. With
this patch, libffi works perfectly, and passes its testsuite entirely
on musl libc systems.
---
 src/closures.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/closures.c b/src/closures.c
index 3dec0e3..05849e0 100644
--- a/src/closures.c
+++ b/src/closures.c
@@ -35,7 +35,7 @@
 #include <ffi_common.h>
 
 #if !FFI_MMAP_EXEC_WRIT && !FFI_EXEC_TRAMPOLINE_TABLE
-# if __gnu_linux__ && !defined(__ANDROID__)
+# if __linux__ && !defined(__ANDROID__)
 /* This macro indicates it may be forbidden to map anonymous memory
    with both write and execute permission.  Code compiled when this
    option is defined will attempt to map such pages once, but if it
